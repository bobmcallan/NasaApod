services:
  
  client:
    container_name: caelum-client
    image: caelum-client:${TAG-latest}
    ports:
      - 8080:80
    depends_on:
      - server
    restart: always

  server:
    container_name: caelum-server
    image: caelum-server:${TAG-latest}
    ports:
      - 4000:4000
    environment:
      - KAFKA_SERVER=kafka-broker:29092
    depends_on:
      - kafka-broker
    restart: always
  
  kafka-broker:
    container_name: kafka-broker
    platform: linux/amd64
    # https://github.com/bitnami/bitnami-docker-kafka
    image: bitnami/kafka
    restart: always
    ports:
      - "9092:9092"
    volumes:
      - kafka_data:/bitnami
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_BROKER_ID=1
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@localhost:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:29092,EXTERNAL://0.0.0.0:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka-broker:29092,EXTERNAL://localhost:9092
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
      - ALLOW_PLAINTEXT_LISTENER=yes
    healthcheck:
      # https://github.com/bitnami/bitnami-docker-kafka/blob/master/3.2/debian-11/prebuildfs/opt/bitnami/.bitnami_components.json
      test: wait-for-port --state=inuse 29092
      start_period: 90s
      interval: 10s
      timeout: 10s
      retries: 10
    
  kafdrop:
    container_name: kafka-ui
    platform: linux/amd64
    image: obsidiandynamics/kafdrop
    restart: always
    ports:
      - "9100:9000"
    environment:
      - KAFKA_BROKERCONNECT=kafka-broker:29092
      - JVM_OPTS=-Xms32M -Xmx64M
    depends_on:
      kafka-broker:
        condition: service_healthy

volumes:
  kafka_data: